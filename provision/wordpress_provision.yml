---
- name: Deploy WordPress main node
  hosts: all
  tasks:
    - name: Including default vars file
      ansible.builtin.include_vars: ../defaults/vars.yml

    - name: Updating Apt cache and making sure Apache is absent
      ansible.builtin.apt:
        name: apache2
        state: absent
        update_cache: yes
      become: yes

    - name: Installing PHP modules
      ansible.builtin.apt:
        pkg:
        - php-mysql
        - php-curl
        - php-gd
        - php-intl
        - php-mbstring
        - php-soap
        - php-xml
        - php-xmlrpc
        - php-zip
        - php-fpm
        state: present
      become: yes

    - name: Installing Nginx
      ansible.builtin.apt:
        name: nginx
        state: present
      become: yes      

    - name: 'Creating {{ wp_install_dir }} directory'
      file:
        path: '{{ wp_install_dir }}'
        state: directory
        mode: 0755
      become: yes

    - name: 'Dowloading and Extracting latest Wordpress to {{ wp_install_dir }}'
      ansible.builtin.unarchive:
        src: "https://wordpress.org/{{ wp_version }}.tar.gz"    
        dest: "{{ wp_install_dir }}"
        remote_src: yes
      become: yes

    - name: 'Moving files from {{ wp_install_dir }}/wordpress to {{ wp_install_dir }}'
      command: cp -rf . "{{ wp_install_dir }}"
      args:
        chdir: "{{ wp_install_dir }}/wordpress/"
      become: yes

    - name: 'Changing ownership of installation directory ({{ wp_install_dir }})'
      file:
        path: "{{ wp_install_dir }}"
        owner: www-data
        group: www-data
        state: directory
        recurse: yes
      become: yes
    
    - name: Fetching random salts for wp-config.php
      delegate_to: localhost 
      uri:
        url: 'https://api.wordpress.org/secret-key/1.1/salt/'
        return_content: yes
      become: False
      register: 'wp_salt_array'

    - name: Setting wp_salt fact
      set_fact:
        wp_salt: '{{ wp_salt_array.content }}'
 
    - name: Configuring wp-config.php
      ansible.builtin.template:
        src: '../templates/wp-config.php.j2'
        dest: '{{ wp_install_dir }}/wp-config.php'
        owner: www-data
        group: www-data
      become: yes

    # check if exists?
    - name: Adding Nginx configuration for Wordpress site to sites-available
      ansible.builtin.template:
        src: '../templates/nginx_conf_wordpress.j2'
        dest: '/etc/nginx/sites-available/wordpress'
        owner: root
        group: root
        mode: '0644'
      become: yes

    - name: Creating symlink from sites-available/wordpress to sites-enabled/default
      file:
        src: /etc/nginx/sites-available/wordpress
        dest: /etc/nginx/sites-enabled/default
        state: link
      become: yes

    # handler
    - name: Restarting Nginx
      service:
        name: nginx
        state: restarted
      become: yes
